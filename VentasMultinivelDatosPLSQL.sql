-- Calcula el precio total de la venta cada vez que agrega un nuevo producto
create or replace trigger preciototal
after insert on PRODUCTO_VENTA
    FOR EACH ROW
DECLARE
    V_TOTAL NUMBER(15,2);
    V_ANTERIOR NUMBER(15,2);
    V_IVA NUMBER(3,2);
    K_REGION NUMBER(4);
    
BEGIN
	
	SELECT V.V_PRECIOFINAL INTO V_ANTERIOR FROM VENTA V WHERE :new.K_VENTA=V.K_CODVENTA;
	SELECT (P.V_PRECIO * :new.Q_CANTIDAD) INTO V_TOTAL FROM PRECIO P,VENTA V WHERE P.K_PRODUCTO=:new.K_PRODUCTO AND :new.K_VENTA=V.K_CODVENTA;
    	select I.V_IVA INTO V_IVA from IVA I,VENTA V where V.K_IVA =I.K_IMPUESTO;
	select RP.K_CODREGION INTO K_REGION from REPRESENTANTE_CLIENTE RC, VENTA V, REGION_REPRESENTANTE RP where V.K_ID_REP_CLIENTE=RC.K_ID_REP_CLIENTE AND V.K_CODVENTA = :NEW.K_VENTA AND RP.K_REPVENTA=RC.K_CODREPVENTAS;
	V_TOTAL := V_ANTERIOR + (V_TOTAL * V_IVA);
	UPDATE VENTA SET V_PRECIOFINAL = V_TOTAL WHERE VENTA.K_CODVENTA = :new.K_VENTA;
	UPDATE PRODUCTO_REGION PR SET Q_STOCK = Q_STOCK - :new.Q_CANTIDAD WHERE PR.K_PRODUCTO = :new.K_PRODUCTO AND PR.K_REGION = K_REGION;
END;
/
--Realizar la calificaci√≥n del representante de una venta
CREATE OR REPLACE PROCEDURE CALIFICAR_REPRESENTANTE(codRepresent IN VENTA.K_ID_REP_CLIENTE%TYPE,
                                                    calificacion IN VENTA.V_CALIFICACION%TYPE,venta IN VENTA.K_CODVENTA%TYPE) IS 
BEGIN
    update venta v set v.V_CALIFICACION = calificacion where v.K_ID_REP_CLIENTE = codRepresent and v.K_CODVENTA = venta;
END CALIFICAR_REPRESENTANTE;
/

--Tabula el promedio de calificacion de los representantes que han hecho alguna venta
CREATE OR REPLACE PROCEDURE PROMEDIO_PERIODICO IS
 	CURSOR pro IS SELECT TO_CHAR(V.F_FECHA,'YY/MM') AS fecha, AVG(V.V_CALIFICACION)  AS promedi 
 	FROM VENTA V, REPRESENTANTE_CLIENTE RC, REP_VENTAS RV
	WHERE V.K_ID_REP_CLIENTE = RC.K_ID_REP_CLIENTE AND RC.K_CODREPVENTAS = RV.K_CODREPVENTAS GROUP BY TO_CHAR(V.F_FECHA,'YY/MM');
	promedio pro%ROWTYPE;
BEGIN
	open pro;
		FETCH pro into PROMEDIO;
		WHILE pro%FOUND LOOP
			FETCH pro into PROMEDIO;
			DBMS_OUTPUT.put_line (PROMEDIO.fecha ||' '||PROMEDIO.promedi);
--			EXIT WHEN pro%NOTFOUND;
		END LOOP;
	CLOSE pro;
END PROMEDIO_PERIODICO;
/

--comision periodica para un vendedor
CREATE OR REPLACE PROCEDURE PR_COMISION_PERIODICA IS
	CURSOR comi IS SELECT TO_CHAR(V.F_FECHA,'YY/MM') AS fecha,RV.K_CODREPVENTAS as vendedor, SUM(V.V_PRECIOFINAL)*C.V_PORCOMISION as comision
	FROM VENTA V
	INNER JOIN REPRESENTANTE_CLIENTE RC ON RC.K_ID_REP_CLIENTE = V.K_ID_REP_CLIENTE
	INNER JOIN REP_VENTAS RV ON RV.K_CODREPVENTAS = RC.K_CODREPVENTAS
	INNER JOIN CLASIFICACION C ON RV.K_CLASIFICACION = C.K_CODCLASI GROUP BY TO_CHAR(V.F_FECHA,'YY/MM'),RV.K_CODREPVENTAS,C.V_PORCOMISION;
	comisi comi%ROWTYPE;
BEGIN
	OPEN comi;
		FETCH comi INTO comisi;
		WHILE comi%FOUND LOOP
			FETCH comi INTO comisi;
			DBMS_OUTPUT.put_line (comisi.fecha||' '||comisi.vendedor||' '||comisi.comision);
		END LOOP;
	CLOSE comi;
	
END PR_COMISION_PERIODICA;
/
